---
import Layout from '../../layouts/Layout.astro'
import Subheading from '../../components/Subheading.astro'
import Input from '../../components/Input.astro'
import Button from '../../components/Button.astro'
import { Eraser } from 'lucide-astro'
---

<Layout
  title="check splitter"
  description="Calculate how to split your checks!"
>
  <p class="mb-4">
    A tool to calculate how much individuals pay (including tax & tip!) when
    splitting a check!
  </p>

  <form id="formA">
    <label class="mb-3 block">
      Individual Subtotal ($) - accepts math expressions
      <Input id="indSubtotal" type="text" placeholder="ex: 1.00 + 1.50*3" />
      <span id="indExprErrorMsg" class="mt-1 text-red-500"></span>
    </label>

    <label class="my-3 block">
      Check Subtotal ($)
      <Input
        type="number"
        id="checkSubtotal"
        placeholder="0.00"
        step=".01"
        min="0"
      />
    </label>

    <label class="my-3 block">
      Check Tax + Tip ($) - accepts math expr
      <Input id="taxTip" type="text" placeholder="0.00" />
      <span id="taxTipExprErrorMsg" class="mt-1 text-red-500"></span>
    </label>

    <div>
      <Subheading class="mt-5">Result</Subheading>
       Individual's Total Share: $<span id="totalShare">0.00</span>
    </div>
  </form>

  <Button
    id="clearBtn"
    class="mt-3 bg-purple-600 font-bold hover:bg-purple-700"
    type="button"
  >
    <Eraser class="me-1 inline w-5 align-top" />
     Clear inputs
  </Button>

  <hr class="my-4" />

  <!-- Upcoming features -->
  <h2 class="text-xl font-semibold text-emerald-300">Upcoming features</h2>
  <ul class="list-inside list-disc">
    <li>
      Functionality to store your results to keep track of all of a check's
      splits
    </li>
  </ul>
</Layout>

<script>
  import * as math from 'mathjs'

  /// CONSTANTS
  const form = document.querySelector<HTMLFormElement>('#formA')
  const inputs = Array.from(form!.getElementsByTagName('input'))

  // Input elements
  const indSubtotalInput =
    document.querySelector<HTMLInputElement>('#indSubtotal')
  const subtotalInput =
    document.querySelector<HTMLInputElement>('#checkSubtotal')
  const taxTipInput = document.querySelector<HTMLInputElement>('#taxTip')

  // Elements
  const totalShareElement = document.getElementById('totalShare')
  const indExprErrorMsg = document.getElementById('indExprErrorMsg')
  const taxTipExprErrorMsg = document.getElementById('taxTipExprErrorMsg')
  const clearBtn = document.getElementById('clearBtn')

  /// FUNCTIONS
  function parseInput(input: string) {
    if (!math.hasNumericValue(input)) {
      return false
    }

    return math.round(math.number(input), 2)
  }

  /**
   * Calculates an individual's share to a check then editing the value on the page.
   *
   * Via event listener, this function is run upon any change to the form's inputs.
   */
  function calcIndShare() {
    if (
      !form ||
      !subtotalInput ||
      !indSubtotalInput ||
      !taxTipInput ||
      !indExprErrorMsg ||
      !taxTipExprErrorMsg ||
      !totalShareElement
    )
      return

    let subtotal = parseInput(subtotalInput.value) || 1

    // Calculate individual subtotal
    let indSubtotal: number
    try {
      indSubtotal = math.evaluate(indSubtotalInput.value) || 0
      indExprErrorMsg.innerHTML = ''
    } catch (error) {
      indExprErrorMsg.innerHTML = '❗ Invalid arithmetic expression!'
      return
    }

    // Calculate tax
    let taxTip: number
    try {
      taxTip = math.evaluate(taxTipInput.value) || 0
      taxTipExprErrorMsg.innerHTML = ''
    } catch (error) {
      taxTipExprErrorMsg.innerHTML = '❗ Invalid arithmetic expression!'
      return
    }

    // Calculate subshares
    const taxTipShare = (indSubtotal / subtotal) * taxTip
    let totalShare = taxTipShare + indSubtotal

    // Update individual share
    totalShareElement.innerHTML = totalShare.toFixed(2)
  }

  /// INITIALIZATION
  // Activate form calculation functionality
  form!.addEventListener('input', calcIndShare)

  // Activate clear button
  clearBtn!.addEventListener('click', () => {
    inputs.forEach((input) => {
      input.value = ''
    })
    totalShareElement!.innerHTML = '0.00'
  })
</script>
